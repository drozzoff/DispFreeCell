title, "Extraction ThomX";
option, warn, -info, -echo;
/*+++++++++++++++++++++++++++++++++++++++++++++ELEMENTS DEFINITION+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
name		element		length			property #1				property #2				property #3                      */


len = 2.3 - 0.30;	//the distance between two dipols
//+++++++++++++++++++++++++++++++++++++++++++++++++++++DRIFTS++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SD32:		drift,		l = 0.2;
SD2:		drift,		l = 0.2;
SD51:		drift,		l = 0.6621;
SDIL2:		drift,		l = 0.145;
SDIE2:		drift,		l = 0.3;
SDIE3:		drift,		l := len;	//has incorrec1t value due to hte wrong positioning	--	should be chnaged in order to place more quads
SDIE4:		drift,		l = 0.2;
SD2L:		drift,		l = 0.5;
SDIE5:		drift,		l = 2.5;
//SD3L:		drift,		l = 0.20000000e+00;

SDIE3_1:	drift,		l = 0.55425635189; //0.55425635189
SDIE3_2_1:	drift,		l := (len - 0.15 - 2 * SDIE3_1->l) / 2; //0.6324364811
SDIE3_2_2:	drift,		l := (len - 0.15 - 2 * SDIE3_1->l) / 2;
SDIE3_3:	drift,		l := SDIE3_1->l;

SDQ:		drift,		l = 0.15;	//drift to place instead of quads
//+++++++++++++++++++++++++++++++++++++++++++++++++++QUADRUPOLS+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
QP2:		quadrupole,	l = 0.15,		k1 = 9.2301636;	//quad from the ring
QP1:		quadrupole,	l = 0.15,		k1 = -4.477139;	//quad from the ring

QP5EX:		quadrupole,	l = 0.15,		k1 = -9.623546;	//extraction quads
QP6EX:		quadrupole,	l = 0.15,		k1 = 10.05291;	//extruction quads

QP1D:		quadrupole,	l = 0.15,		k1 = 25;	//first quad to control dispertion
QP2D:		quadrupole,	l = 0.15,		k1 = 18;//:= QP1D->k1;	//second quad to control dispertion
QP3D:		quadrupole,	l = 0.15,		k1 = -18.0;

//QP7EX:	quadrupole,	l = 0.15,		k1 = -7.0;	//optional quad - for
//+++++++++++++++++++++++++++++++++++++++++++++++++++++DIPOLES++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
KICK:		sbend,		l = 0.2,		angle = -0.011;	//kicker located in the ring
SEPT_half:	sbend,		l = 0.1851072 / 2,	angle = -0.16 / 2; //іфвфв
DIPE:		sbend,		l = 0.2764601,		angle = -0.785398;
DIPL:		sbend,		l = 0.27646,		angle = 0.785698,	fint = 0.27833331,	hgap = 0.025;
//+++++++++++++++++++++++++++++++++++++++++++++++++++++MARKERS++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
COKS:		marker;
COKE:		marker;

COSE:		marker;
COSS:		marker;

COEL:		marker;
COSL:		marker;
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++RING STRUCTURE+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
EXT_LINE: line = (
//COKS,	KICK,	COKE,
//SD32,	QP2,	SD2,	QP1,	SD51,
SEPT_half,	COSE,
SDIL2,		SDIE2,
DIPE,		SDIE3_1,	QP1D,	SDIE3_2_1,	QP3D,	SDIE3_2_2,	QP2D,	SDIE3_3,	DIPL,
SDIE4);//, 		QP5EX,		SD2L,	QP6EX,		SDIE5);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++CODE+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
beam, particle = electron, energy = 0.50510999e-01, RADIATE;
use, sequence = EXT_LINE;


//+++++++++++++++++++using of the analitycal equation+++++++++++++++++
k = QP1D->k1;
C = 0.105483076 + len / 2;
value, C;
ld = C + sqrt( (C - 2/(sqrt(k) * tan(0.15 * sqrt(k) / 2) ) ) * (C + 2/(sqrt(k) / tan(0.15*sqrt(k) / 2) ) ) );
SDIE3_2_1->l = (ld - 0.15) / 2;
SDIE3_2_2->l = (ld - 0.15) / 2;
SDIE3_1->l = (len - ld) / 2;
SDIE3_3->l = (len - ld) / 2;

value, SDIE3_1->l, SDIE3_2->l, SDIE3_3->l;


readmytable, file = "ring_twiss.out", table = twiss_ring;
betx0 = table(twiss_ring, SEPT_mid, betx);;
bety0 = table(twiss_ring, SEPT_mid, bety);;
alfx0 = table(twiss_ring, SEPT_mid, alfx);;
alfy0 = table(twiss_ring, SEPT_mid, alfy);;
dx0 = table(twiss_ring, SEPT_mid, dx);
dpx0 = table(twiss_ring, SEPT_mid, dpx);


//++++++++++++++++++++++matching module+++++++++++++++++++++++++++++++++
match, sequence = EXT_LINE, betx = betx0, bety = bety0, alfx = alfx0, alfy = alfy0, dx = dx0, dpx = dpx0;

constraint, range = #e, dx = 0, dpx = 0;
constraint, range = SEPT_half/SDIE4, betx < 50, bety < 30;	//limit betx/bety = 50/50 - 2.8 m, 2.9 m
																													//		betx/bety = 50/40 - 2.7 m, 2.6 m
																													//		betx/bety = 50/30 - 2.5 m, 2.4 m, 2.3 m, 2.2 m

vary, name = QP1D->k1, step = 0.00001, lower = -23.0, upper = +23.0;
vary, name = QP2D->k1, step = 0.00001, lower = -19.0, upper = +19.0;
vary, name = QP3D->k1, step = 0.00001, lower = -23.0, upper = +23.0;

//vary, name = SDIE3_1->l, step = 0.000001, lower = 0.0, upper = 1.0;
//vary, name = SDIE3_2->l, step = 0.000001, lower = 0.0, upper = 1.0;
//vary, name = SDIE3_3->l, step = 0.000001, lower = 0.0, upper = 1.0;

simplex, calls = 100000, tolerance = 1e-28;

endmatch;

//-----best parameters------
//	2.8m
//		QP1D - 1.74827e+01
//		QP2D - 1.86366e+01
//		QP3D - -1.33307e+01
//	2.9m
//		QP1D - 1.68866e+01
//		QP2D - 1.80241e+01
//		QP3D - -1.17880e+01
//	2.7m
//		QP1D - 1.81689e+01
//		QP2D - 1.93364e+01
//		QP3D - -1.55868e+01
//	2.6m
//		QP1D - 1.89444e+01
//		QP2D - 2.01548e+01
//		QP3D - -1.57964e+01
//	2.5m
//		QP1D - 1.98361e+01
//		QP2D - 2.11178e+01
//		QP3D - -1.44637e+01
//	2.4m
//		QP1D - 2.09471e+01
//		QP2D - 2.22354e+01
//		QP3D - -1.91294e+01
//	2.3m
//		QP1D - 2.22370e+01
//		QP2D - 2.35992e+01
//		QP3D - -1.93867e+01
//	2.2m
//		QP1D - 2.38502e+01
//		QP2D - 2.52649e+01
//		QP3D - -2.28523e+01



select, flag = twiss, column = name, s, betx, bety, alfx, alfy, mux, muy, dx, dpx;
twiss, save, file = "extraction_twiss.out", betx = betx0, bety = bety0, alfx = alfx0, alfy = alfy0, dx = dx0, dpx = dpx0;

readmytable, file = "ring_survey.out", table = survey_ring;
select, flag = survey, column = name, s, x, z, theta;
survey, sequence = INJ_LINE, file = "extraction_survey.out";

//select, flag = twiss, column = s, betx, bety;
//write, table = twiss, file = "extraction_twiss.out";
value, SDIE3_1->l, SDIE3_2_1->l, SDIE3_2_2->l, SDIE3_3->l;
value, ld;
value, len;
setplot, font = 2;
plot, haxis = s, vaxis1 = betx, bety, vaxis2 = dx, colour = 100, file = "extraction_twiss";

//plot, haxis = s, vaxis = dx, dpx, colour = 100, file = "twiss_plots/extraction_twiss";

//plot, haxis = x, vaxis = z, table = survey, file = "survey_plots/extraction";
